-- 微信小程序大五人格测试 - 简化版Supabase数据库初始化脚本
-- 只包含用户账号、头像和昵称相关表
-- 运行日期: 2025-10-11

-- 1. 创建用户表 (users)
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    openid VARCHAR(255) UNIQUE NOT NULL,
    unionid VARCHAR(255),
    nickname VARCHAR(100) NOT NULL,
    avatar_url TEXT NOT NULL,
    gender INTEGER DEFAULT 0, -- 0:未知 1:男 2:女
    country VARCHAR(50),
    province VARCHAR(50),
    city VARCHAR(50),
    language VARCHAR(20),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    last_login_at TIMESTAMP WITH TIME ZONE
);

-- 2. 创建索引以提高查询性能
CREATE INDEX IF NOT EXISTS idx_users_openid ON users(openid);
CREATE INDEX IF NOT EXISTS idx_users_unionid ON users(unionid);

-- 3. 创建Row Level Security (RLS) 策略
-- 启用RLS
ALTER TABLE users ENABLE ROW LEVEL SECURITY;

-- 删除已存在的策略
DROP POLICY IF EXISTS "Users can insert their own data" ON users;
DROP POLICY IF EXISTS "Users can view their own data" ON users;
DROP POLICY IF EXISTS "Users can update their own data" ON users;

-- 创建RLS策略
-- 用户表：所有人可以插入，用户只能查看自己的信息
CREATE POLICY "Users can insert their own data" ON users
    FOR INSERT WITH CHECK (true);

CREATE POLICY "Users can view their own data" ON users
    FOR SELECT USING (openid = current_setting('app.current_user_openid', true));

CREATE POLICY "Users can update their own data" ON users
    FOR UPDATE USING (openid = current_setting('app.current_user_openid', true));

-- 4. 创建存储过程：用户登录处理
CREATE OR REPLACE FUNCTION handle_user_login(
    p_openid VARCHAR(255),
    p_nickname VARCHAR(100),
    p_avatar_url TEXT,
    p_unionid VARCHAR(255) DEFAULT NULL,
    p_gender INTEGER DEFAULT 0,
    p_country VARCHAR(50) DEFAULT NULL,
    p_province VARCHAR(50) DEFAULT NULL,
    p_city VARCHAR(50) DEFAULT NULL,
    p_language VARCHAR(20) DEFAULT NULL,
    p_device_info JSONB DEFAULT NULL
)
RETURNS TABLE (
    user_id BIGINT,
    is_new_user BOOLEAN,
    nickname VARCHAR(100)
) AS '
DECLARE
    v_user_id BIGINT;
    v_is_new_user BOOLEAN;
BEGIN
    -- 检查用户是否存在
    SELECT id INTO v_user_id FROM users WHERE openid = p_openid LIMIT 1;
    
    IF v_user_id IS NULL THEN
        -- 新用户，创建记录
        INSERT INTO users (openid, unionid, nickname, avatar_url, gender, country, province, city, language)
        VALUES (p_openid, p_unionid, p_nickname, p_avatar_url, p_gender, p_country, p_province, p_city, p_language)
        RETURNING id INTO v_user_id;
        
        v_is_new_user := TRUE;
    ELSE
        -- 现有用户，更新信息
        UPDATE users 
        SET 
            nickname = p_nickname,
            avatar_url = p_avatar_url,
            gender = p_gender,
            country = p_country,
            province = p_province,
            city = p_city,
            language = p_language,
            last_login_at = NOW()
        WHERE id = v_user_id;
        
        v_is_new_user := FALSE;
    END IF;
    
    -- 返回结果
    RETURN QUERY SELECT v_user_id, v_is_new_user, p_nickname;
END;
' LANGUAGE plpgsql;

-- 完成提示
SELECT 'Supabase数据库初始化完成！' AS message;